// <auto-generated />
using System;
using Agora.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Agora.Infrastructure.Migrations
{
    [DbContext(typeof(AgoraDBContext))]
    partial class AgoraDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.9");

            modelBuilder.Entity("Agora.Domain.Account.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("BirthDate")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Accounts", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("188557c3-5b0c-48d4-bfc5-42393625bc86"),
                            Email = "admin@admin.admin",
                            PasswordHash = "CSTZout8CRHUDhGmHlYs9A==;Oc81Kk+WZuwIw7CXUGHsvk1jvSwHeunR1Berd87/ioY=",
                            Role = "Admin"
                        });
                });

            modelBuilder.Entity("Agora.Domain.Discussion.Discussion", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationDate")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(3000)
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Discussions", (string)null);
                });

            modelBuilder.Entity("Agora.Domain.Discussion.Discussion", b =>
                {
                    b.OwnsMany("Agora.Domain.Discussion.Entities.Comment", "Comments", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("TEXT");

                            b1.Property<Guid>("AuthorId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Commentary")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("TEXT");

                            b1.Property<DateTime>("CreationDate")
                                .HasMaxLength(100)
                                .HasColumnType("TEXT");

                            b1.Property<Guid>("DiscussionId")
                                .HasColumnType("TEXT");

                            b1.HasKey("Id");

                            b1.HasIndex("DiscussionId");

                            b1.ToTable("Comments", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("DiscussionId");
                        });

                    b.OwnsMany("Agora.Domain.Discussion.Entities.Favourite", "Favourites", b1 =>
                        {
                            b1.Property<Guid>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("TEXT");

                            b1.Property<DateTime>("CreationDate")
                                .HasMaxLength(100)
                                .HasColumnType("TEXT");

                            b1.Property<Guid>("DiscussionId")
                                .HasColumnType("TEXT");

                            b1.Property<Guid>("UserId")
                                .HasColumnType("TEXT");

                            b1.HasKey("Id");

                            b1.HasIndex("DiscussionId");

                            b1.ToTable("Favourites", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("DiscussionId");
                        });

                    b.Navigation("Comments");

                    b.Navigation("Favourites");
                });
#pragma warning restore 612, 618
        }
    }
}
